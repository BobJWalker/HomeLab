name = "Configure Lab Infrastructure"
default_guided_failure_mode = "EnvironmentDefault"
description = "Runbook to configure the lab's infrastructure"

connectivity_policy {
    allow_deployments_to_no_targets = true
}

run_retention_policy {
    quantity_to_keep = 100
}

process {
    step "install-nginx-ingress-controller" {
        name = "Install NGINX Ingress Controller"
        properties = {
            Octopus.Action.TargetRoles = "homelab-cluster"
        }

        action {
            action_type = "Octopus.KubernetesRunScript"
            properties = {
                Octopus.Action.RunOnServer = "false"
                Octopus.Action.Script.ScriptBody = "kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.9.5/deploy/static/provider/cloud/deploy.yaml"
                Octopus.Action.Script.ScriptSource = "Inline"
                Octopus.Action.Script.Syntax = "Bash"
            }
            worker_pool_variable = ""
        }
    }

    step "install-key-vault-csi-driver" {
        name = "Install Key Vault CSI Driver"
        properties = {
            Octopus.Action.TargetRoles = "homelab-cluster"
        }

        action {
            action_type = "Octopus.KubernetesRunScript"
            properties = {
                Octopus.Action.KubernetesContainers.Namespace = "kube-system"
                Octopus.Action.RunOnServer = "false"
                Octopus.Action.Script.ScriptBody = <<-EOT
                    helm repo add secrets-store-csi-driver https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts
                    helm repo update
                    
                    helm upgrade csi-secrets-store secrets-store-csi-driver/secrets-store-csi-driver \
                      --namespace kube-system \
                      --set syncSecret.enabled=true
                    EOT
                Octopus.Action.Script.ScriptSource = "Inline"
                Octopus.Action.Script.Syntax = "Bash"
            }
            worker_pool_variable = ""
        }
    }

    step "install-the-azure-key-vault-csi-driver" {
        name = "Install the Azure Key Vault CSI Driver"
        properties = {
            Octopus.Action.TargetRoles = "homelab-cluster"
        }

        action {
            action_type = "Octopus.KubernetesRunScript"
            properties = {
                Octopus.Action.RunOnServer = "false"
                Octopus.Action.Script.ScriptBody = "kubectl apply -f https://raw.githubusercontent.com/Azure/secrets-store-csi-driver-provider-azure/refs/heads/master/deployment/provider-azure-installer.yaml"
                Octopus.Action.Script.ScriptSource = "Inline"
                Octopus.Action.Script.Syntax = "Bash"
            }
            worker_pool_variable = ""
        }
    }

    step "deploy-azure-sp-secret" {
        name = "Deploy Azure SP Secret"
        properties = {
            Octopus.Action.TargetRoles = "homelab-cluster"
        }

        action {
            action_type = "Octopus.KubernetesDeployRawYaml"
            properties = {
                Octopus.Action.GitRepository.FilePathFilters = "k8s/azure-principle.yaml"
                Octopus.Action.GitRepository.Source = "Project"
                Octopus.Action.Kubernetes.DeploymentTimeout = "180"
                Octopus.Action.Kubernetes.ResourceStatusCheck = "True"
                Octopus.Action.Kubernetes.ServerSideApply.Enabled = "True"
                Octopus.Action.Kubernetes.ServerSideApply.ForceConflicts = "True"
                Octopus.Action.KubernetesContainers.CustomResourceYamlFileName = "k8s/azure-principle.yaml"
                Octopus.Action.Package.JsonConfigurationVariablesTargets = "**/*.{yml,yaml}"
                Octopus.Action.RunOnServer = "false"
                Octopus.Action.Script.ScriptSource = "GitRepository"
            }
            worker_pool_variable = ""
        }
    }
}